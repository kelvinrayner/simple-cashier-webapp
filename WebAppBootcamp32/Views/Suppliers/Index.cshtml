@*@model WebAppBootcamp32.Models.TB_M_Supplier*@

@{
    ViewBag.Title = "Suppliers";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

<style type="text/css">
    table.dataTable thead tr {
        background-color: lightseagreen;
    }
</style>

<h2>Suppliers</h2>

<p>
    <button id="addItem" type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Add Item</button>
</p>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="closeItem" type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Supplier</h4>
            </div>
            <div class="modal-body" style="height: 200px;">
                @*@using (Html.BeginForm("Create", "Suppliers"))
                {*@
                <form action="@Url.Action("Create", "Suppliers")" method="post">
                    <div class="form-group">

                        @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                            <label name="nameCreate">Name :</label>
                            <input type="text" name="Name" class="form-control" />
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                            <label name="nameCreate">Email :</label>
                            <input type="text" name="Email" class="form-control" />
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>
                </form>
                @*}*@
            </div>
        </div>
    </div>
</div>

<div id="editModal" class="modal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="closeItem" type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Supplier</h4>
            </div>
            <div class="modal-body" style="height: 200px;">
                @*@using (Html.BeginForm("EditSupplier", "Suppliers"))
                {*@
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                            <label name="nameCreate">Name :</label>
                            <input type="text" name="Name" class="form-control"/>
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                            <input type="text" name="Email" class="form-control"/>
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>
                @*}*@
            </div>
        </div>
    </div>
</div>


<table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
    <thead>
        <tr>
            <th>
                No.
            </th>
            <th>
                Name
                @*@Html.DisplayNameFor(model => model.Name)*@
            </th>
            <th>
                Email
                @*@Html.DisplayNameFor(model => model.Email)*@
            </th>
            <th>
                Create Date
                @*@Html.DisplayNameFor(model => model.CreateDate)*@
            </th>
            <th>
                @Html.DisplayName("Actions")
            </th>
        </tr>
    </thead>
    <tbody class="tbody">
        @*@{int count = 0; }
        @foreach (var item in Model.SuppliersList)
        {
            <tr>
                <td>
                    @{count++;
                    }
                    @count
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", null, new { id = item.Id }, new { @class = "btn btn-info", @id = "editItem", data_target = "#editModal", data_toogle = "modal" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger", onclick = "return confirm('Are you sure you wish to delete this item?');" })
                </td>
            </tr>
        }*@
    </tbody>
</table>
<script>
    $('#demoGrid').dataTable({
        "aoColumns": [null, null, null, null, { "bSortable": false }]
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        loadData();
        $("#addItem").click(function () {
            $("#myModal").modal('hide');
        });

        $("#closeItem").click(function () {
            $("#myModal").modal('hide');
        });

        $("#editItem").click(function () {
            $("#editModal").modal('show');
        });
    });

    function loadData() {
        $.ajax({
            url: "/Suppliers/supplierJsonList",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var html = '';
                const obj = JSON.parse(result);
                $.each(obj, function (key, item) {
                    html += '<tr>';
                    html += '<td>' + key++ + '</td>';
                    html += '<td>' + item.Name + '</td>';
                    html += '<td>' + item.Email + '</td>';
                    html += '<td>' + item.CreateDate + '</td>';
                    html += '<td><a href="#" onclick="return getbyID(' + item.Id + ')">Edit</a> | <a href="#" onclick="return getbyID(' + item.Id + ')">Delete</a></td>';
                    html += '</tr>';
                });
                $('.tbody').html(html);
            },
            error: function (errormessage) {
                console.log(errormessage.responseText);
            }
        });
    }
</script>